#library "botstuff"
#include "zcommon.acs"
#import "PLAYER.acs"
#import "ACTIONS.acs"
#import "ALPHLIB.acs"
#import "TRAVEL.acs"
#import "PASSIVES.acs"


Script "CheckBotEnter" ENTER
{
	if(ClassifyActor(0) & ACTOR_BOT)
	{
		ACS_NamedExecuteAlways("SetupBot", 0);
	}
}
Script "BotRespawn" RESPAWN
{
	if(ClassifyActor(0) & ACTOR_BOT)
	{
		ACS_NamedExecuteAlways("SetupBot", 0);
	}
	
}
Script "SetupBot" (void)
{
	GiveInventory(WEAP_CLASSNAMES[random(0, NUM_WEAPS - 1)], 1);
	for(int j = 0; j < NUM_WEAPS; j++)
	{
		GiveInventory(WEAP_ENERGYNAMES[j], GetAmmoCapacity(WEAP_ENERGYNAMES[j]));
	}
	
	switch(random(0,3))
	{
		case 0:
		GiveInventory("TravelThrusterBoots", 1);
		GiveInventory("ThrusterBootsCharge", 2);
		break;
		case 1:
		GiveInventory("TravelWarpDrive", 1);
		break;
		case 2:
		GiveInventory("TravelJumpThrust", 1);
		break;
		case 3:
		GiveInventory("TravelHyperdrive", 1);
		break;
	}
	switch(random(0,4))
	{
		case 0:
		GiveInventory("ActionRegenZone", 1);
		break;
		case 1:
		GiveInventory("ActionSonicShockwave", 1);
		break;
		case 2:
		GiveInventory("ActionPowerBrace", 1);
		break;
		case 3:
		GiveInventory("ActionDecoyHologram", 1);
		break;
		case 4:
		GiveInventory("ActionAutoDrone", 1);
		break;
		default:
		GiveInventory("ActionRegenZone", 1);
		break;
		
	}
	switch(random(0, 6))
	{
		case 0:
		GiveInventory("PassiveRapidAlt", 1);
		break;
		case 1:
		GiveInventory("PassiveOverclocked", 1);
		break;
		case 2:
		GiveInventory("PassiveBandolier", 1);
		break;
		case 3:
		GiveInventory("PassiveSpeedDemon", 1);
		break;
		case 4:
		GiveInventory("PassiveNanoPlating", 1);
		break;
		case 5:
		GiveInventory("PassiveNegaBarrier", 1);
		break;
		case 6:
		GiveInventory("PassiveAdrenalineRush", 1);
		break;
	}
		
	if(CheckInventory("PassiveSpeedDemon") > 0)
	{
		GiveInventory("ExtraTravelCharge", 1);
	}
	if(CheckInventory("PassiveNanoPlating") > 0)
	{
		GiveInventory("NanoShard", 5);
	}
	if(CheckInventory("PassiveNegaBarrier") > 0)
	{
		GiveInventory("NegaBarrier", 1);
		ACS_NamedExecuteAlways("NegaBarrierBubbleFX", 0);
	}
	SetActorProperty(0, APROP_SPEED, GetActorProperty(0, APROP_SPEED) * 0.8);
	ACS_NamedExecuteAlways("StartBotAliveTimer", 0);
}
Script "StartBotAliveTimer" (void)
{
	int cdrate = 1;
	while(ClassifyActor(0) & ACTOR_ALIVE)
	{
		if(random(1, 35 / cdrate) == 1)
		{
			ACS_NamedExecuteAlways("TravelAbility", 0);
		}
		if(random(1, 70 / cdrate) == 1)
		{
			ACS_NamedExecuteAlways("ActionAbility1", 0);
		}
		if(random(1, 105) == 1)
		{
			ACS_NamedExecuteAlways("BotChangeToAltWeapon", 0);
		}
		if(random(1, 350) == 1)
		{
			ACS_NamedExecuteAlways("BotChangeWeapon", 0);
		}
		if(random(1, 35 / cdrate) == 1)
		{
			GiveInventory("AltFirePressed", 1);
			GiveInventory("AltFireReleased", 1);
		}
		else
		{
			TakeInventory("AltFirePressed", 1);
			GiveInventory("AltFireReleased", 1);
		}
		
		if(CheckInventory("PhotonCarbine") && !CheckInventory("PhotonCarbineAlt"))
		{
			GiveInventory("PhotonCarbineAlt", 1);
		}
		if(CheckInventory("C14") && !CheckInventory("C14Alt"))
		{
			GiveInventory("C14Alt", 1);
		}
		if(CheckInventory("TeslaSMG") && !CheckInventory("TeslaSMGAlt"))
		{
			GiveInventory("TeslaSMGAlt", 1);
		}
		if(CheckInventory("ParticleSplitter") && !CheckInventory("ParticleSplitterAlt"))
		{
			GiveInventory("ParticleSplitterAlt", 1);
		}
		if(CheckInventory("SparkCannon") && !CheckInventory("SparkCannonAlt"))
		{
			GiveInventory("SparkCannonAlt", 1);
		}
		if(CheckInventory("Flamespitter") && !CheckInventory("FlamespitterAlt"))
		{
			GiveInventory("FlamespitterAlt", 1);
		}
		if(CheckInventory("BeamRifle") && !CheckInventory("BeamRifleAlt"))
		{
			GiveInventory("BeamRifleAlt", 1);
		}
		delay(1);
	}
}
//Required for the bots to swap weapons even if they have ammo for their current weapon.
Script "BotChangeWeapon" (void)
{
	bool swapSuccess;
	switch(random(1, 7))
	{
		case 1:
		swapSuccess = SetWeapon("ParticleSplitter");
		break;
		case 2:
		swapSuccess = SetWeapon("TeslaSMG");
		break;
		case 3:
		swapSuccess = SetWeapon("PhotonCarbine");
		break;
		case 4:
		swapSuccess = SetWeapon("C14");
		break;
		case 5:
		swapSuccess = SetWeapon("SparkCannon");
		break;
		case 6:
		swapSuccess = SetWeapon("Flamespitter");
		break;
		case 7:
		swapSuccess = SetWeapon("BeamRifle");
		break;
	}
}

//Required for the bots to use their alt-fire.
Script "BotChangeToAltWeapon" (void)
{
	int rand = random(1, 7);
	if(rand == 1 && CheckInventory("PSGAltCD") == 0)
	{
		SetWeapon("ParticleSplitterAlt");
	}
	if(rand == 2 && CheckInventory("SMGAltCD") == 0)
	{
		SetWeapon("TeslaSMGAlt");
	}
	if(rand == 3 && CheckInventory("CarbineAltCD") == 0)
	{
		SetWeapon("PhotonCarbineAlt");
	}
	if(rand == 4 && CheckInventory("C14AltCD") == 0)
	{
		SetWeapon("C14Alt");
	}
	if(rand == 5 && CheckInventory("SparkAltCD") == 0)
	{
		SetWeapon("SparkCannonAlt");
	}
	if(rand == 6 && CheckInventory("FlamespitterAltCD") == 0)
	{
		SetWeapon("FlamespitterAlt");
	}
	if(rand == 7)
	{
		SetWeapon("BeamRifleAlt");
	}
}