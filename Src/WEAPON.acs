#library "WEAPON"
#include "zcommon.acs"
#import "ALPHLIB.acs"

Script "WeaponGlow" ENTER
{
	while(true)
	{
		for(int i = 0; i < NUM_WEAPS; i++)
		{
			if(GetWeapon() == WEAP_CLASSNAMES[i] || GetWeapon() == WEAP_ALTCLASSNAMES[i])
			{
				str glowclass = StrParam(s:WEAP_COLORS[i], s:"GlowSpawner");
				SpawnForced(glowclass, GetActorX(0), GetActorY(0), GetActorZ(0) + 2.0);
			}
		}
		delay(1);
	}
}
//For the Thermite Spitter's alt-fire.
Script "PlayerDeathByThermite" (void)
{
	int initid = ActivatorTID();
	SetActivator(0, AAPTR_TARGET);
	int blastid = UniqueTID(1, 0);
	SpawnProjectile(0, "ThermiteChainReact", 0, 0, 0, 0, blastid);
	SetActorPosition(blastid, GetActorX(initid), GetActorY(initid), GetActorZ(initid) + 16.0, false);
}
//Every weapon should execute this script when fired.
Script "OnWeaponFired" (void) 
{
	GiveInventory("EnergyRechargeCD", 105);
	for(int i = 0; i < NUM_WEAPS; i++)
	{
		if(GetWeapon() == WEAP_CLASSNAMES[i] && CheckInventory(WEAP_ENERGYNAMES[i]) <= 20 && CheckInventory("NoLowEnergySound") == 0)
		{
			LocalAmbientSound("General/LowEnergy", 96);
			GiveInventory("NoLowEnergySound", 1);
		}
	}
	ACS_NamedExecuteAlways("CheckAssassinTactics", 0);
	
}
//Handles Alt-Fire cooldowns.
Script "OnWeaponAltFired" (void) 
{
	for(int i = 0; i < NUM_WEAPS; i++)
	{
		GiveInventory(WEAP_COOLDOWNNAMES[i], GetAmmoCapacity(WEAP_COOLDOWNNAMES[i]));
	}
	ACS_NamedExecuteAlways("OnWeaponFired", 0);
	
}